@{ Layout = "_Layout";
    var categories = ViewBag.Categories as List<webCore.Models.Category>;
    var parentCategories = categories?.Where(c => c.ParentId == null).ToList();
    var groupedProducts = ViewBag.GroupedProducts as Dictionary<string, List<webCore.Models.Product_admin>>;
    var featuredProducts = ViewBag.FeaturedProducts as List<webCore.Models.Product_admin>;
    var bestsellerProducts = ViewBag.BestsellerProducts as List<webCore.Models.Product_admin>; // Dữ liệu sách bán chạy
    var sortedProducts = ViewBag.SortedProducts as List<webCore.Models.Product_admin>;
    var orderedGroupedProducts = groupedProducts
        .OrderBy(group =>
            group.Key == "Gợi ý" ? 1 :
            group.Key == "Mới" ? 2 :
            group.Key == "Nổi bật" ? 3 : 4)
        .ToList(); }

   <div class="container">
     <div class="row">
      <!-- Sidebar - Danh mục sản phẩm -->
        <aside class="list col-md-4">
            <ul class="list-group">
                <li class="inner-title list-group-item">
                    <h3>Danh mục sản phẩm</h3>
                </li>
                @if (parentCategories != null)
                {
                    foreach (var parent in parentCategories)
                    {
    <li class="list-group-item" onclick="toggleArrow(this)">
        <a>@parent.Title<span class="arrow"></span></a>
        <ul class="list-group subcategories" style="display: none;">
            @foreach (var sub in categories.Where(c => c.ParentId == parent._id))
            {<!-- Call loadProductsByCategoryId with the categoryId -->
                        <li class="list-group-item" onclick="loadProductsByCategoryId('@sub._id')">
                            <a>@sub.Title</a>
                        </li>}
        </ul>
    </li>}
                }
            </ul>
            <!-- Phần hiển thị Sách Bán Chạy nằm trong Sidebar -->
            @if (bestsellerProducts != null && bestsellerProducts.Any())
            {
<div class="featured-section mt-4">
    <h4 class="featured-title">Sách Bán Chạy</h4>
    <ul class="list-group">
        @foreach (var product in bestsellerProducts.Take(5)) // Hiển thị sách bán chạy
        {
<li class="list-group-item">
    <div class="row">
        <div class="col-4">
            <img src="@product.Image" class="img-fluid" alt="@product.Title" />
        </div>
        <div class="col-8">
            <a href="@Url.Action("DetailProduct", "DetailProduct", new { id = product.Id })" class="product-title">
                @product.Title
            </a>
            @if (product.DiscountPercentage > 0)
            {
<div>
    <span class="text-muted old-price">@string.Format("{0:C}", product.Price)</span>
    <span class="new-price">@string.Format("{0:C}", product.Price * (1 - product.DiscountPercentage / 100))</span>
</div> }
                    else
                    {
<div class="price">@string.Format("{0:C}", product.Price)</div>}
        </div>
    </div>
</li>}
    </ul>
</div>            }
        </aside>

        <!-- Main Content - Sản phẩm -->
        <main class="main col-md-8 p-3">
            <!-- Slideshow -->
            <div id="bookCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="/image/image_theme1.jpg" class="d-block w-100" alt="..." />
                        <div class="carousel-caption d-none d-md-block">
                            <button class="btn1">Mua ngay</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="/image/image_theme2.jpg" class="d-block w-100" alt="..." />
                        <div class="carousel-caption d-none d-md-block">
                            <button class="btn2">Mua ngay</button>
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="/image/image_theme3.jpg" class="d-block w-100" alt="..." />
                        <div class="carousel-caption d-none d-md-block">
                            <button class="btn3">Mua ngay</button>
                        </div>
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#bookCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#bookCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                </button>
            </div>

            <!-- Danh sách sản phẩm -->
            <div class="product-list mt-5">
                @if (orderedGroupedProducts != null && orderedGroupedProducts.Any())
                {
                    foreach (var group in orderedGroupedProducts)
                    {
                         <h3 class="product-group-name">@group.Key</h3>
                        <div class="position-relative">
                            <!-- Nút điều hướng trái -->
                            <button class="scroll-btn scroll-left" onclick="scrollProducts(this, -300)">
                                &lt;
                            </button>

                            <!-- Hàng sản phẩm -->
                            <div class="product-row">
                                @foreach (var product in group.Value)
                                {
                        <div class="product-item">
                            <div class="card">
                                <a href="@Url.Action("DetailProduct", "DetailProduct", new { id = product.Id })">
                                    <img src="@product.Image" class="card-img-top" alt="@product.Title" />
                                    <div class="card-body">
                                        <h5 class="card-title">@product.Title</h5>
                                        <p class="card-text">
                                            @if (product.DiscountPercentage > 0)
                                            {
                                            <span class="badge discount-badge">
                                                Giảm @product.DiscountPercentage%
                                            </span>
                                                <br />
                                                <span class="text-muted old-price">
                                                @string.Format("{0:C}", product.Price)
                                                </span>
                                                 <br />
                                                <span class="price new-price">
                                                    @string.Format("{0:C}", product.Price * (1 - product.DiscountPercentage / 100))
                                                </span> }
                                                                        else
                                                                        {
                                                <span class="price normal-price">
                                                    @string.Format("{0:C}", product.Price)
                                                </span>}
                                                </p>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                }
                            </div>

                            <!-- Nút điều hướng phải -->
                            <button class="scroll-btn scroll-right" onclick="scrollProducts(this, 300)">
                                &gt;
                            </button>
                        </div> }
                                    }
                                    else
                                    {
                        <p>Không có sản phẩm nào để hiển thị.</p>}
                            </div>
                        </main>
                    </div>
                </div>

<script>
    function toggleArrow(item) {
        var subCategoryList = item.querySelector(".subcategories");
        var arrow = item.querySelector(".arrow");

        if (subCategoryList.style.display === "none" || subCategoryList.style.display === "") {
            subCategoryList.style.display = "block";
            arrow.classList.add("open");
        } else {
            subCategoryList.style.display = "none";
            arrow.classList.remove("open");
        }
    }

    function loadProductsByCategoryId(categoryId) {
        // Fetch the products from the server based on the categoryId
        fetch(`/Home/GetProductsByCategoryId?categoryId=${categoryId}`)
            .then(response => response.text())
            .then(html => {
                // Replace the product list with the new content
                document.querySelector('.product-list').innerHTML = html;
            })
            .catch(error => console.error('Error loading products:', error));
    }
    function scrollProducts(button, distance) {
        const row = button.parentElement.querySelector('.product-row');
        row.scrollBy({
            left: distance,
            behavior: 'smooth'
        });
    }
</script>

@functions { // Get the correct label based on the FeaturedStatus enum
    public string GetFeaturedLabel(string featured)
    {
        switch (featured)
        {
            case "Nổi bật": return "Nổi bật";
            case "Mới": return "Mới";
            case "Gợi ý": return "Gợi ý";
            default: return ""; // Trả về chuỗi rỗng thay vì "Không nổi bật"
        }
    } }